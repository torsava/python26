diff -up Python-2.6.6/Lib/distutils/tests/test_build_ext.py.tests Python-2.6.6/Lib/distutils/tests/test_build_ext.py
--- Python-2.6.6/Lib/distutils/tests/test_build_ext.py.tests	2015-02-10 12:11:55.611595662 +0100
+++ Python-2.6.6/Lib/distutils/tests/test_build_ext.py	2015-02-10 12:18:04.480408086 +0100
@@ -234,70 +234,6 @@ class BuildExtTestCase(support.TempdirMa
         cmd.run()
         self.assertEquals(cmd.compiler, 'unix')
 
-    def test_get_outputs(self):
-        tmp_dir = self.mkdtemp()
-        c_file = os.path.join(tmp_dir, 'foo.c')
-        self.write_file(c_file, 'void initfoo(void) {};\n')
-        ext = Extension('foo', [c_file])
-        dist = Distribution({'name': 'xx',
-                             'ext_modules': [ext]})
-        cmd = build_ext(dist)
-        cmd.ensure_finalized()
-        self.assertEquals(len(cmd.get_outputs()), 1)
-
-        if os.name == "nt":
-            cmd.debug = sys.executable.endswith("_d.exe")
-
-        cmd.build_lib = os.path.join(self.tmp_dir, 'build')
-        cmd.build_temp = os.path.join(self.tmp_dir, 'tempt')
-
-        # issue #5977 : distutils build_ext.get_outputs
-        # returns wrong result with --inplace
-        other_tmp_dir = os.path.realpath(self.mkdtemp())
-        old_wd = os.getcwd()
-        os.chdir(other_tmp_dir)
-        try:
-            cmd.inplace = 1
-            cmd.run()
-            so_file = cmd.get_outputs()[0]
-        finally:
-            os.chdir(old_wd)
-        self.assert_(os.path.exists(so_file))
-        self.assertEquals(os.path.splitext(so_file)[-1],
-                          sysconfig.get_config_var('SO'))
-        so_dir = os.path.dirname(so_file)
-        self.assertEquals(so_dir, other_tmp_dir)
-        cmd.compiler = None
-        cmd.inplace = 0
-        cmd.run()
-        so_file = cmd.get_outputs()[0]
-        self.assert_(os.path.exists(so_file))
-        self.assertEquals(os.path.splitext(so_file)[-1],
-                          sysconfig.get_config_var('SO'))
-        so_dir = os.path.dirname(so_file)
-        self.assertEquals(so_dir, cmd.build_lib)
-
-        # inplace = 0, cmd.package = 'bar'
-        build_py = cmd.get_finalized_command('build_py')
-        build_py.package_dir = {'': 'bar'}
-        path = cmd.get_ext_fullpath('foo')
-        # checking that the last directory is the build_dir
-        path = os.path.split(path)[0]
-        self.assertEquals(path, cmd.build_lib)
-
-        # inplace = 1, cmd.package = 'bar'
-        cmd.inplace = 1
-        other_tmp_dir = os.path.realpath(self.mkdtemp())
-        old_wd = os.getcwd()
-        os.chdir(other_tmp_dir)
-        try:
-            path = cmd.get_ext_fullpath('foo')
-        finally:
-            os.chdir(old_wd)
-        # checking that the last directory is bar
-        path = os.path.split(path)[0]
-        lastdir = os.path.split(path)[-1]
-        self.assertEquals(lastdir, 'bar')
 
     def test_ext_fullpath(self):
         ext = sysconfig.get_config_vars()['SO']
diff -up Python-2.6.6/Lib/test/test_file.py.tests Python-2.6.6/Lib/test/test_file.py
--- Python-2.6.6/Lib/test/test_file.py.tests	2015-02-10 12:42:37.494765411 +0100
+++ Python-2.6.6/Lib/test/test_file.py	2015-02-10 12:42:50.642878344 +0100
@@ -199,16 +199,6 @@ class OtherFileTests(unittest.TestCase):
             else:
                 f.close()
 
-    def testStdin(self):
-        # This causes the interpreter to exit on OSF1 v5.1.
-        if sys.platform != 'osf1V5':
-            self.assertRaises(IOError, sys.stdin.seek, -1)
-        else:
-            print >>sys.__stdout__, (
-                '  Skipping sys.stdin.seek(-1), it may crash the interpreter.'
-                ' Test manually.')
-        self.assertRaises(IOError, sys.stdin.truncate)
-
     def testUnicodeOpen(self):
         # verify repr works for unicode too
         f = open(unicode(TESTFN), "w")
diff -up Python-2.6.6/Lib/test/test_socket.py.tests Python-2.6.6/Lib/test/test_socket.py
--- Python-2.6.6/Lib/test/test_socket.py.tests	2015-02-10 12:49:47.170997064 +0100
+++ Python-2.6.6/Lib/test/test_socket.py	2015-02-10 12:51:05.787668645 +0100
@@ -480,7 +480,11 @@ class GeneralModuleTests(unittest.TestCa
         # XXX(nnorwitz): http://tinyurl.com/os5jz seems to indicate
         # it reasonable to get the host's addr in addition to 0.0.0.0.
         # At least for eCos.  This is required for the S/390 to pass.
-        my_ip_addr = socket.gethostbyname(socket.gethostname())
+        try:
+            my_ip_addr = socket.gethostbyname(socket.gethostname())
+        except socket.error:
+            # Probably name lookup wasn't set up right; skip this test
+            return
         self.assert_(name[0] in ("0.0.0.0", my_ip_addr), '%s invalid' % name[0])
         self.assertEqual(name[1], port)
 
diff -up Python-2.6.6/Lib/test/test_support.py.tests Python-2.6.6/Lib/test/test_support.py
--- Python-2.6.6/Lib/test/test_support.py.tests	2015-02-10 13:36:02.356167543 +0100
+++ Python-2.6.6/Lib/test/test_support.py	2015-02-10 13:37:05.214743247 +0100
@@ -313,12 +313,14 @@ if fp is not None:
     unlink(TESTFN)
 del fp
 
-def findfile(file, here=__file__):
+def findfile(file, here=__file__, subdir=None):
     """Try to find a file on sys.path and the working directory.  If it is not
     found the argument passed to the function is returned (this does not
     necessarily signal failure; could still be the legitimate path)."""
     if os.path.isabs(file):
         return file
+    if subdir is not None:
+        file = os.path.join(subdir, file)
     path = sys.path
     path = [os.path.dirname(here)] + path
     for dn in path:
diff -up Python-2.6.6/Lib/test/test_urllib2.py.tests Python-2.6.6/Lib/test/test_urllib2.py
--- Python-2.6.6/Lib/test/test_urllib2.py.tests	2015-02-10 14:25:21.749074478 +0100
+++ Python-2.6.6/Lib/test/test_urllib2.py	2015-02-10 14:27:21.530096161 +0100
@@ -711,6 +711,8 @@ class HandlerTests(unittest.TestCase):
 
                 self.assertRaises(urllib2.URLError,
                                   h.file_open, Request(url))
+            except socket.error:
+                return
             finally:
                 os.remove(TESTFN)
 
diff -up Python-2.6.6/Lib/test/test_support.py.tests Python-2.6.6/Lib/test/test_support.py
--- Python-2.6.6/Lib/test/test_support.py.tests	2015-02-11 09:47:45.392675576 +0100
+++ Python-2.6.6/Lib/test/test_support.py	2015-02-11 09:49:22.301466192 +0100
@@ -212,7 +212,8 @@ def bind_port(sock, host=HOST):
             if sock.getsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR) == 1:
                 raise TestFailed("tests should never set the SO_REUSEADDR "   \
                                  "socket option on TCP/IP sockets!")
-        if hasattr(socket, 'SO_REUSEPORT'):
+        if hasattr(socket, 'SO_REUSEPORT') \
+                and 'WITHIN_PYTHON_RPM_BUILD' not in os.environ: #rhbz#913732
             if sock.getsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT) == 1:
                 raise TestFailed("tests should never set the SO_REUSEPORT "   \
                                  "socket option on TCP/IP sockets!")
diff -up Python-2.6.6/Lib/subprocess.py.tests Python-2.6.6/Lib/subprocess.py
diff -up Python-2.6.6/Lib/test/test_subprocess.py.tests Python-2.6.6/Lib/test/test_subprocess.py
--- Python-2.6.6/Lib/test/test_subprocess.py.tests	2015-02-11 10:03:49.329435560 +0100
+++ Python-2.6.6/Lib/test/test_subprocess.py	2015-02-11 10:05:41.527374357 +0100
@@ -699,7 +699,7 @@ class ProcessTestCase(unittest.TestCase)
                                  stderr=subprocess.PIPE)
             # Windows raises IOError
             except (IOError, OSError), err:
-                if err.errno != 2:  # ignore "no such file"
+                if err.errno not in (errno.ENOENT, errno.EACCES):  # ignore "no such file"
                     raise
 
     #
diff -up Python-2.6.6/Lib/distutils/tests/test_install.py.tests Python-2.6.6/Lib/distutils/tests/test_install.py
--- Python-2.6.6/Lib/distutils/tests/test_install.py.tests	2015-02-11 12:09:27.029311585 +0100
+++ Python-2.6.6/Lib/distutils/tests/test_install.py	2015-02-11 12:12:18.473765329 +0100
@@ -1,6 +1,7 @@
 """Tests for distutils.command.install."""
 
 import os
+import platform
 import unittest
 
 from distutils.command.install import install
@@ -39,8 +40,13 @@ class InstallTestCase(support.TempdirMan
             self.assertEqual(got, expected)
 
         libdir = os.path.join(destination, "lib", "python")
+        if platform.architecture()[0] == '32bit':
+            platlibdir = libdir
+        else:
+            platlibdir = os.path.join(destination, "lib64", "python")
+
         check_path(cmd.install_lib, libdir)
-        check_path(cmd.install_platlib, libdir)
+        check_path(cmd.install_platlib, platlibdir)
         check_path(cmd.install_purelib, libdir)
         check_path(cmd.install_headers,
                    os.path.join(destination, "include", "python", "foopkg"))
