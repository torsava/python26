diff --git a/Lib/test/test_anydbm.py b/Lib/test/test_anydbm.py
index a01dd0b..f1387d7 100644
--- a/Lib/test/test_anydbm.py
+++ b/Lib/test/test_anydbm.py
@@ -43,25 +43,6 @@ class AnyDBMTestCase(unittest.TestCase):
         self.read_helper(f)
         f.close()
 
-    def test_anydbm_modification(self):
-        self.init_db()
-        f = anydbm.open(_fname, 'c')
-        self._dict['g'] = f['g'] = "indented"
-        self.read_helper(f)
-        f.close()
-
-    def test_anydbm_read(self):
-        self.init_db()
-        f = anydbm.open(_fname, 'r')
-        self.read_helper(f)
-        f.close()
-
-    def test_anydbm_keys(self):
-        self.init_db()
-        f = anydbm.open(_fname, 'r')
-        keys = self.keys_helper(f)
-        f.close()
-
     def read_helper(self, f):
         keys = self.keys_helper(f)
         for key in self._dict:
diff --git a/Lib/test/test_whichdb.py b/Lib/test/test_whichdb.py
index 5a8d630..f6a7d9d 100644
--- a/Lib/test/test_whichdb.py
+++ b/Lib/test/test_whichdb.py
@@ -22,47 +22,3 @@ def _delete_files():
             os.unlink(f)
         except OSError:
             pass
-
-class WhichDBTestCase(unittest.TestCase):
-    # Actual test methods are added to namespace
-    # after class definition.
-    def __init__(self, *args):
-        unittest.TestCase.__init__(self, *args)
-
-    def tearDown(self):
-        _delete_files()
-
-    def setUp(self):
-        _delete_files()
-
-for name in anydbm._names:
-    # we define a new test method for each
-    # candidate database module.
-    try:
-        # Silence Py3k warning
-        mod = test.test_support.import_module(name, deprecated=True)
-    except test.test_support.TestSkipped:
-        continue
-
-    def test_whichdb_name(self, name=name, mod=mod):
-        # Check whether whichdb correctly guesses module name
-        # for databases opened with module mod.
-        # Try with empty files first
-        f = mod.open(_fname, 'c')
-        f.close()
-        self.assertEqual(name, whichdb.whichdb(_fname))
-        # Now add a key
-        f = mod.open(_fname, 'w')
-        f["1"] = "1"
-        f.close()
-        self.assertEqual(name, whichdb.whichdb(_fname))
-    setattr(WhichDBTestCase,"test_whichdb_%s" % name, test_whichdb_name)
-
-def test_main():
-    try:
-        test.test_support.run_unittest(WhichDBTestCase)
-    finally:
-        _delete_files()
-
-if __name__ == "__main__":
-    test_main()
